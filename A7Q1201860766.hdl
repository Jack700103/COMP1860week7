CHIP DecoderSegment201860766 {
    IN A, B, C, D; 
    OUT c; 

    PARTS:
        Not(in=A, out=NA);
        Not(in=B, out=NB);
        Not(in=C, out=NC);
        Not(in=D, out=ND);
    
        And(a=NA, b=NB, out=tmp1);
        And(a=tmp1, b=NC, out=tmp2);
        And(a=tmp2, b=ND, out=m0);

        And(a=NA, b=NB, out=tmp3);
        And(a=tmp3, b=NC, out=tmp4);
        And(a=tmp4, b=D, out=m1);
 
        And(a=NA, b=NB, out=tmp5);
        And(a=tmp5, b=C, out=tmp6);
        And(a=tmp6, b=D, out=m3);

        And(a=NA, b=B, out=tmp7);
        And(a=tmp7, b=NC, out=tmp8);
        And(a=tmp8, b=ND, out=m4);
 
        And(a=NA, b=B, out=tmp9);
        And(a=tmp9, b=NC, out=tmp10);
        And(a=tmp10, b=D, out=m5);

        And(a=NA, b=B, out=tmp11);
        And(a=tmp11, b=C, out=tmp12);
        And(a=tmp12, b=ND, out=m6);

        And(a=NA, b=B, out=tmp13);
        And(a=tmp13, b=C, out=tmp14);
        And(a=tmp14, b=D, out=m7);

        And(a=A, b=NB, out=tmp15);
        And(a=tmp15, b=NC, out=tmp16);
        And(a=tmp16, b=ND, out=m8);

        And(a=A, b=NB, out=tmp17);
        And(a=tmp17, b=NC, out=tmp18);
        And(a=tmp18, b=D, out=m9);

        And(a=A, b=NB, out=tmp19);
        And(a=tmp19, b=C, out=tmp20);
        And(a=tmp20, b=ND, out=m10);

        And(a=A, b=NB, out=tmp21);
        And(a=tmp21, b=C, out=tmp22);
        And(a=tmp22, b=D, out=m11);

        And(a=A, b=B, out=tmp23);
        And(a=tmp23, b=NC, out=tmp24);
        And(a=tmp24, b=D, out=m13);

        And(a=A, b=B, out=tmp25);
        And(a=tmp25, b=C, out=tmp26);
        And(a=tmp26, b=ND, out=m14);

        And(a=A, b=B, out=tmp27);
        And(a=tmp27, b=C, out=tmp28);
        And(a=tmp28, b=D, out=m15);

        Or(a=m0, b=m1, out=or1);
        Or(a=or1, b=m3, out=or2);
        Or(a=or2, b=m4, out=or3);
        Or(a=or3, b=m5, out=or4);
        Or(a=or4, b=m6, out=or5);
        Or(a=or5, b=m7, out=or6);
        Or(a=or6, b=m8, out=or7);
        Or(a=or7, b=m9, out=or8);
        Or(a=or8, b=m10, out=or9);
        Or(a=or9, b=m11, out=or10);
        Or(a=or10, b=m13, out=or11);
        Or(a=or11, b=m14, out=or12);
        Or(a=or12, b=m15, out=c);
}